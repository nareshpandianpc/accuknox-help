{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to AccuKnox Help What is AccuKnox \u00b6 AccuKnox is Identity-driven Security for Data, Kubernetes, and Native VM workloads for Private and Public Clouds. AccuKnox is Zero Trust Run-time Kubernetes Security Solution. It provides run-time protection for your Kubernetes and other cloud workloads using Kernel Native Primitives such as AppArmor SELinux and eBPF. Quick Start \u00b6 Read more \ud83d\udc49 Documentation - Getting Started Links \u00b6 Cilium KubeArmor","title":"Home"},{"location":"#what_is_accuknox","text":"AccuKnox is Identity-driven Security for Data, Kubernetes, and Native VM workloads for Private and Public Clouds. AccuKnox is Zero Trust Run-time Kubernetes Security Solution. It provides run-time protection for your Kubernetes and other cloud workloads using Kernel Native Primitives such as AppArmor SELinux and eBPF.","title":"What is AccuKnox"},{"location":"#quick_start","text":"Read more \ud83d\udc49 Documentation - Getting Started","title":"Quick Start"},{"location":"#links","text":"Cilium KubeArmor","title":"Links"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"CodeHilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/channel-integration/","text":"Channel Integration \u00b6 Channel Integrations is the fourth sub-section of Workspace Manager. This section is used to integrate external services with AccuKnox so you can export logs as well as metrics. These services include: Webhooks Slack Jira Elastic Search Pagerduty Syslog Splunk Email ServiceNow AWS CloudWatch Choose any one of the services and click the Integrate Now button. 1. Integration of Slack: \u00b6 a. Prerequisites: \u00b6 You need a valid and active account in Slack. After logging into your Slack channel, you must generate a Hook URL. [Note]: If you don\u2019t know how to get Hook URL then click this link and follow the steps. b. Steps to Integrate: \u00b6 Goto Channel Integration URL Click the Integrate Now button inside Slack Here you'll be able to see these entries: Integration Name: Enter the name for the integration. You can set any name. Hook URL: Enter your slack hook URL here. Sender Name: Enter the sender name here. Channel Name: Enter your slack channel name here. Message Title: You can set a message title using this input field. This is optional. Tags to be sent with alerts: You can set tags using this input field. This is optional. Once you fill every field then click the button this will test whether your integration is working or not. Click the Save button. 2. Integration of Splunk: \u00b6 a. Prerequisites \u00b6 You need a Splunk HTTP event collector URL for this Integration. [Note]: If you don\u2019t know how to get Splunk HTTP event collector URL then click this link b. Steps to Integrate: \u00b6 Goto Channel Integration URL Click the Integrate Now button inside Splunk Here you'll be able to see these entries: Integration Name: Enter the name for the integration. You can set any name. Splunk HTTP event collector URL: Enter your Splunk HTTP event collector URL here. Token: Enter your Splunk Token here. Source: Enter your Splunk channel name here. Index: Enter your Splunk Index here. Source Type: Enter your Source Type here. Enable HTTPS: If you want HTTPS service then enable this button. Enable TLS Verify: If you want TLS service then enable this button. Once you fill every field then click the button this will test whether your integration is working or not. Click the Save button.","title":"What is Channel Integration"},{"location":"getting-started/channel-integration/#channel_integration","text":"Channel Integrations is the fourth sub-section of Workspace Manager. This section is used to integrate external services with AccuKnox so you can export logs as well as metrics. These services include: Webhooks Slack Jira Elastic Search Pagerduty Syslog Splunk Email ServiceNow AWS CloudWatch Choose any one of the services and click the Integrate Now button.","title":"Channel Integration"},{"location":"getting-started/channel-integration/#1_integration_of_slack","text":"","title":"1. Integration of Slack:"},{"location":"getting-started/channel-integration/#a_prerequisites","text":"You need a valid and active account in Slack. After logging into your Slack channel, you must generate a Hook URL. [Note]: If you don\u2019t know how to get Hook URL then click this link and follow the steps.","title":"a. Prerequisites:"},{"location":"getting-started/channel-integration/#b_steps_to_integrate","text":"Goto Channel Integration URL Click the Integrate Now button inside Slack Here you'll be able to see these entries: Integration Name: Enter the name for the integration. You can set any name. Hook URL: Enter your slack hook URL here. Sender Name: Enter the sender name here. Channel Name: Enter your slack channel name here. Message Title: You can set a message title using this input field. This is optional. Tags to be sent with alerts: You can set tags using this input field. This is optional. Once you fill every field then click the button this will test whether your integration is working or not. Click the Save button.","title":"b. Steps to Integrate:"},{"location":"getting-started/channel-integration/#2_integration_of_splunk","text":"","title":"2. Integration of Splunk:"},{"location":"getting-started/channel-integration/#a_prerequisites_1","text":"You need a Splunk HTTP event collector URL for this Integration. [Note]: If you don\u2019t know how to get Splunk HTTP event collector URL then click this link","title":"a. Prerequisites"},{"location":"getting-started/channel-integration/#b_steps_to_integrate_1","text":"Goto Channel Integration URL Click the Integrate Now button inside Splunk Here you'll be able to see these entries: Integration Name: Enter the name for the integration. You can set any name. Splunk HTTP event collector URL: Enter your Splunk HTTP event collector URL here. Token: Enter your Splunk Token here. Source: Enter your Splunk channel name here. Index: Enter your Splunk Index here. Source Type: Enter your Source Type here. Enable HTTPS: If you want HTTPS service then enable this button. Enable TLS Verify: If you want TLS service then enable this button. Once you fill every field then click the button this will test whether your integration is working or not. Click the Save button.","title":"b. Steps to Integrate:"},{"location":"getting-started/cilium-install/","text":"Cilium: Deployment Guide \u00b6 Deployment Steps for Cilium & Hubble CLI \u00b6 1. Download and install Cilium CLI \u00b6 curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum } 2. Install Cilium \u00b6 cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings. 3. Validate the Installation \u00b6 a. [Optional] To validate that Cilium has been properly installed, you can run: \u00b6 cilium status --wait b. [Optional] Run the following command to validate that your cluster has proper network connectivity: \u00b6 cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89 4. Setting up Hubble Observability \u00b6 a. Enable Hubble in Cilium \u00b6 cilium hubble enable b. Install the Hubble CLI Client \u00b6 export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum } 5. Getting Alerts/Telemetry from Cilium \u00b6 a. Enable port-forwarding for Cilium Hubble relay \u00b6 cilium hubble port-forward & b. Observing logs using hubble cli \u00b6 hubble observe","title":"Cilium: Deployment Guide"},{"location":"getting-started/cilium-install/#cilium_deployment_guide","text":"","title":"Cilium: Deployment Guide"},{"location":"getting-started/cilium-install/#deployment_steps_for_cilium_hubble_cli","text":"","title":"Deployment Steps for Cilium &amp; Hubble CLI"},{"location":"getting-started/cilium-install/#1_download_and_install_cilium_cli","text":"curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum }","title":"1. Download and install Cilium CLI"},{"location":"getting-started/cilium-install/#2_install_cilium","text":"cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings.","title":"2. Install Cilium"},{"location":"getting-started/cilium-install/#3_validate_the_installation","text":"","title":"3. Validate the Installation"},{"location":"getting-started/cilium-install/#a_optional_to_validate_that_cilium_has_been_properly_installed_you_can_run","text":"cilium status --wait","title":"a. [Optional] To validate that Cilium has been properly installed, you can run:"},{"location":"getting-started/cilium-install/#b_optional_run_the_following_command_to_validate_that_your_cluster_has_proper_network_connectivity","text":"cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89","title":"b. [Optional] Run the following command to validate that your cluster has proper network connectivity:"},{"location":"getting-started/cilium-install/#4_setting_up_hubble_observability","text":"","title":"4. Setting up Hubble Observability"},{"location":"getting-started/cilium-install/#a_enable_hubble_in_cilium","text":"cilium hubble enable","title":"a. Enable Hubble in Cilium"},{"location":"getting-started/cilium-install/#b_install_the_hubble_cli_client","text":"export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum }","title":"b. Install the Hubble CLI Client"},{"location":"getting-started/cilium-install/#5_getting_alertstelemetry_from_cilium","text":"","title":"5. Getting Alerts/Telemetry from Cilium"},{"location":"getting-started/cilium-install/#a_enable_port-forwarding_for_cilium_hubble_relay","text":"cilium hubble port-forward &","title":"a. Enable port-forwarding for Cilium Hubble relay"},{"location":"getting-started/cilium-install/#b_observing_logs_using_hubble_cli","text":"hubble observe","title":"b. Observing logs using hubble cli"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package peaceiris/mkdocs-material docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Start with Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package peaceiris/mkdocs-material","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/workspace-manager/","text":"Workspace Manager in AccuKnox \u00b6 In Workspace Manager, user can perform various tasks such as managing users and roles, onboard cluster and adding third-party integrations etc. The workspace manager has 4 subsections. These four sections are: User Management Role-Based Access Control Onboard Cluster Channel Integrations","title":"What is Workspace Manager"},{"location":"getting-started/workspace-manager/#workspace_manager_in_accuknox","text":"In Workspace Manager, user can perform various tasks such as managing users and roles, onboard cluster and adding third-party integrations etc. The workspace manager has 4 subsections. These four sections are: User Management Role-Based Access Control Onboard Cluster Channel Integrations","title":"Workspace Manager in AccuKnox"},{"location":"open-source/cilium-install/","text":"Cilium: Deployment Guide \u00b6 Deployment Steps for Cilium & Hubble CLI \u00b6 1. Download and install Cilium CLI \u00b6 curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum } 2. Install Cilium \u00b6 cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings. 3. Validate the Installation \u00b6 a. [Optional] To validate that Cilium has been properly installed, you can run: \u00b6 cilium status --wait b. [Optional] Run the following command to validate that your cluster has proper network connectivity: \u00b6 cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89 4. Setting up Hubble Observability \u00b6 a. Enable Hubble in Cilium \u00b6 cilium hubble enable b. Install the Hubble CLI Client \u00b6 export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum } 5. Getting Alerts/Telemetry from Cilium \u00b6 a. Enable port-forwarding for Cilium Hubble relay \u00b6 cilium hubble port-forward & b. Observing logs using hubble cli \u00b6 hubble observe","title":"Installing Cilium"},{"location":"open-source/cilium-install/#cilium_deployment_guide","text":"","title":"Cilium: Deployment Guide"},{"location":"open-source/cilium-install/#deployment_steps_for_cilium_hubble_cli","text":"","title":"Deployment Steps for Cilium &amp; Hubble CLI"},{"location":"open-source/cilium-install/#1_download_and_install_cilium_cli","text":"curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum }","title":"1. Download and install Cilium CLI"},{"location":"open-source/cilium-install/#2_install_cilium","text":"cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings.","title":"2. Install Cilium"},{"location":"open-source/cilium-install/#3_validate_the_installation","text":"","title":"3. Validate the Installation"},{"location":"open-source/cilium-install/#a_optional_to_validate_that_cilium_has_been_properly_installed_you_can_run","text":"cilium status --wait","title":"a. [Optional] To validate that Cilium has been properly installed, you can run:"},{"location":"open-source/cilium-install/#b_optional_run_the_following_command_to_validate_that_your_cluster_has_proper_network_connectivity","text":"cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89","title":"b. [Optional] Run the following command to validate that your cluster has proper network connectivity:"},{"location":"open-source/cilium-install/#4_setting_up_hubble_observability","text":"","title":"4. Setting up Hubble Observability"},{"location":"open-source/cilium-install/#a_enable_hubble_in_cilium","text":"cilium hubble enable","title":"a. Enable Hubble in Cilium"},{"location":"open-source/cilium-install/#b_install_the_hubble_cli_client","text":"export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum }","title":"b. Install the Hubble CLI Client"},{"location":"open-source/cilium-install/#5_getting_alertstelemetry_from_cilium","text":"","title":"5. Getting Alerts/Telemetry from Cilium"},{"location":"open-source/cilium-install/#a_enable_port-forwarding_for_cilium_hubble_relay","text":"cilium hubble port-forward &","title":"a. Enable port-forwarding for Cilium Hubble relay"},{"location":"open-source/cilium-install/#b_observing_logs_using_hubble_cli","text":"hubble observe","title":"b. Observing logs using hubble cli"},{"location":"open-source/kubearmor-install/","text":"KubeArmor: Deployment Guide \u00b6 Deployment Steps for KubeArmor & kArmor CLI \u00b6 1. Download and install karmor CLI \u00b6 curl -sfL https://raw.githubusercontent.com/kubearmor/kubearmor-client/main/install.sh | sudo sh -s -- -b /usr/local/bin 2. Install KubeArmor \u00b6 karmor install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings. 3. Deploying sample app and policies \u00b6 a. Deploy sample multiubuntu app \u00b6 kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/multiubuntu-deployment.yaml b. Deploy sample policies \u00b6 kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/security-policies/ksp-group-1-proc-path-block.yaml This sample policy blocks execution of sleep command in ubuntu-1 pods. c. Simulate policy violation \u00b6 $ kubectl -n multiubuntu exec -it POD_NAME_FOR_UBUNTU_1 -- bash # sleep 1 ( Permission Denied ) Substitute POD_NAME_FOR_UBUNTU_1 with the actual pod name from kubectl get pods -n multiubuntu . 4. Getting Alerts/Telemetry from KubeArmor \u00b6 a. Enable port-forwarding for KubeArmor relay \u00b6 kubectl port-forward -n kube-system svc/kubearmor 32767 :32767 b. Observing logs using karmor cli \u00b6 karmor log K8s platforms tested \u00b6 Google Kubernetes Engine (GKE) Container Optimized OS (COS) GKE Ubuntu image Amazon Elastic Kubernetes Service (EKS) Self-managed (on-prem) k8s Local k8s engines (microk8s, k3s, minikube)","title":"Installing KubeArmor"},{"location":"open-source/kubearmor-install/#kubearmor_deployment_guide","text":"","title":"KubeArmor: Deployment Guide"},{"location":"open-source/kubearmor-install/#deployment_steps_for_kubearmor_karmor_cli","text":"","title":"Deployment Steps for KubeArmor &amp; kArmor CLI"},{"location":"open-source/kubearmor-install/#1_download_and_install_karmor_cli","text":"curl -sfL https://raw.githubusercontent.com/kubearmor/kubearmor-client/main/install.sh | sudo sh -s -- -b /usr/local/bin","title":"1. Download and install karmor CLI"},{"location":"open-source/kubearmor-install/#2_install_kubearmor","text":"karmor install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings.","title":"2. Install KubeArmor"},{"location":"open-source/kubearmor-install/#3_deploying_sample_app_and_policies","text":"","title":"3. Deploying sample app and policies"},{"location":"open-source/kubearmor-install/#a_deploy_sample_multiubuntu_app","text":"kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/multiubuntu-deployment.yaml","title":"a. Deploy sample multiubuntu app"},{"location":"open-source/kubearmor-install/#b_deploy_sample_policies","text":"kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/security-policies/ksp-group-1-proc-path-block.yaml This sample policy blocks execution of sleep command in ubuntu-1 pods.","title":"b. Deploy sample policies"},{"location":"open-source/kubearmor-install/#c_simulate_policy_violation","text":"$ kubectl -n multiubuntu exec -it POD_NAME_FOR_UBUNTU_1 -- bash # sleep 1 ( Permission Denied ) Substitute POD_NAME_FOR_UBUNTU_1 with the actual pod name from kubectl get pods -n multiubuntu .","title":"c. Simulate policy violation"},{"location":"open-source/kubearmor-install/#4_getting_alertstelemetry_from_kubearmor","text":"","title":"4. Getting Alerts/Telemetry from KubeArmor"},{"location":"open-source/kubearmor-install/#a_enable_port-forwarding_for_kubearmor_relay","text":"kubectl port-forward -n kube-system svc/kubearmor 32767 :32767","title":"a. Enable port-forwarding for KubeArmor relay"},{"location":"open-source/kubearmor-install/#b_observing_logs_using_karmor_cli","text":"karmor log","title":"b. Observing logs using karmor cli"},{"location":"open-source/kubearmor-install/#k8s_platforms_tested","text":"Google Kubernetes Engine (GKE) Container Optimized OS (COS) GKE Ubuntu image Amazon Elastic Kubernetes Service (EKS) Self-managed (on-prem) k8s Local k8s engines (microk8s, k3s, minikube)","title":"K8s platforms tested"},{"location":"open-source/what-is-cilium/","text":"Cilium | eBPF-based Networking, Observability, and Security \u00b6 Cilium is an open source project to provide eBPF-based networking, security, and observability for cloud native environments such as Kubernetes clusters and other container orchestration platforms. We are focused on adding value to Cilium in the following areas by using: Extensible Identity solution based on SPIFFE standards Improving policy audit handling Improving policy telemetry and statistics collection to fit realistic scenarios Policy discovery tools.","title":"What is Cilium"},{"location":"open-source/what-is-cilium/#cilium_ebpf-based_networking_observability_and_security","text":"Cilium is an open source project to provide eBPF-based networking, security, and observability for cloud native environments such as Kubernetes clusters and other container orchestration platforms. We are focused on adding value to Cilium in the following areas by using: Extensible Identity solution based on SPIFFE standards Improving policy audit handling Improving policy telemetry and statistics collection to fit realistic scenarios Policy discovery tools.","title":"Cilium | eBPF-based Networking, Observability, and Security"},{"location":"open-source/what-is-kubearmor/","text":"KubeArmor | Cloud Native Runtime Security Enforcement System \u00b6 KubeArmor is a cloud-native runtime security enforcement system that restricts the behavior (such as process execution, file access, and networking operation) of containers and nodes at the system level.","title":"What is KubeArmor"},{"location":"open-source/what-is-kubearmor/#kubearmor_cloud_native_runtime_security_enforcement_system","text":"KubeArmor is a cloud-native runtime security enforcement system that restricts the behavior (such as process execution, file access, and networking operation) of containers and nodes at the system level.","title":"KubeArmor | Cloud Native Runtime Security Enforcement System"}]}