{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to Accuknox help Details \u00b6 Quick start on localhost \u00b6 Links \u00b6","title":"Home"},{"location":"#details","text":"","title":"Details"},{"location":"#quick_start_on_localhost","text":"","title":"Quick start on localhost"},{"location":"#links","text":"","title":"Links"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"CodeHilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/cilium-install/","text":"Cilium: Deployment Guide \u00b6 Deployment Steps for Cilium & Hubble CLI \u00b6 1. Download and install Cilium CLI \u00b6 curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum } 2. Install Cilium \u00b6 cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings. 3. Validate the Installation \u00b6 a. [Optional] To validate that Cilium has been properly installed, you can run: \u00b6 cilium status --wait b. [Optional] Run the following command to validate that your cluster has proper network connectivity: \u00b6 cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89 4. Setting up Hubble Observability \u00b6 a. Enable Hubble in Cilium \u00b6 cilium hubble enable b. Install the Hubble CLI Client \u00b6 export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum } 5. Getting Alerts/Telemetry from Cilium \u00b6 a. Enable port-forwarding for Cilium Hubble relay \u00b6 cilium hubble port-forward & b. Observing logs using hubble cli \u00b6 hubble observe","title":"Cilium Install"},{"location":"getting-started/cilium-install/#cilium_deployment_guide","text":"","title":"Cilium: Deployment Guide"},{"location":"getting-started/cilium-install/#deployment_steps_for_cilium_hubble_cli","text":"","title":"Deployment Steps for Cilium &amp; Hubble CLI"},{"location":"getting-started/cilium-install/#1_download_and_install_cilium_cli","text":"curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz { ,.sha256sum }","title":"1. Download and install Cilium CLI"},{"location":"getting-started/cilium-install/#2_install_cilium","text":"cilium install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings.","title":"2. Install Cilium"},{"location":"getting-started/cilium-install/#3_validate_the_installation","text":"","title":"3. Validate the Installation"},{"location":"getting-started/cilium-install/#a_optional_to_validate_that_cilium_has_been_properly_installed_you_can_run","text":"cilium status --wait","title":"a. [Optional] To validate that Cilium has been properly installed, you can run:"},{"location":"getting-started/cilium-install/#b_optional_run_the_following_command_to_validate_that_your_cluster_has_proper_network_connectivity","text":"cilium connectivity test Congratulations! You have a fully functional Kubernetes cluster with Cilium. \ud83c\udf89","title":"b. [Optional] Run the following command to validate that your cluster has proper network connectivity:"},{"location":"getting-started/cilium-install/#4_setting_up_hubble_observability","text":"","title":"4. Setting up Hubble Observability"},{"location":"getting-started/cilium-install/#a_enable_hubble_in_cilium","text":"cilium hubble enable","title":"a. Enable Hubble in Cilium"},{"location":"getting-started/cilium-install/#b_install_the_hubble_cli_client","text":"export HUBBLE_VERSION = $( curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt ) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/ $HUBBLE_VERSION /hubble-linux-amd64.tar.gz { ,.sha256sum } sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz { ,.sha256sum }","title":"b. Install the Hubble CLI Client"},{"location":"getting-started/cilium-install/#5_getting_alertstelemetry_from_cilium","text":"","title":"5. Getting Alerts/Telemetry from Cilium"},{"location":"getting-started/cilium-install/#a_enable_port-forwarding_for_cilium_hubble_relay","text":"cilium hubble port-forward &","title":"a. Enable port-forwarding for Cilium Hubble relay"},{"location":"getting-started/cilium-install/#b_observing_logs_using_hubble_cli","text":"hubble observe","title":"b. Observing logs using hubble cli"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package peaceiris/mkdocs-material docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package peaceiris/mkdocs-material","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/kubearmor-install/","text":"KubeArmor: Deployment Guide \u00b6 Deployment Steps for KubeArmor & karmor CLI \u00b6 1. Download and install karmor CLI \u00b6 curl -sfL https://raw.githubusercontent.com/kubearmor/kubearmor-client/main/install.sh | sudo sh -s -- -b /usr/local/bin 2. Install KubeArmor \u00b6 karmor install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings. 3. Deploying sample app and policies \u00b6 a. Deploy sample multiubuntu app \u00b6 kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/multiubuntu-deployment.yaml b. Deploy sample policies \u00b6 kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/security-policies/ksp-group-1-proc-path-block.yaml This sample policy blocks execution of sleep command in ubuntu-1 pods. c. Simulate policy violation \u00b6 $ kubectl -n multiubuntu exec -it POD_NAME_FOR_UBUNTU_1 -- bash # sleep 1 ( Permission Denied ) Substitute POD_NAME_FOR_UBUNTU_1 with the actual pod name from kubectl get pods -n multiubuntu . 4. Getting Alerts/Telemetry from KubeArmor \u00b6 a. Enable port-forwarding for KubeArmor relay \u00b6 kubectl port-forward -n kube-system svc/kubearmor 32767 :32767 b. Observing logs using karmor cli \u00b6 karmor log K8s platforms tested \u00b6 Google Kubernetes Engine (GKE) Container Optimized OS (COS) GKE Ubuntu image Amazon Elastic Kubernetes Service (EKS) Self-managed (on-prem) k8s Local k8s engines (microk8s, k3s, minikube)","title":"KubeArmor Install"},{"location":"getting-started/kubearmor-install/#kubearmor_deployment_guide","text":"","title":"KubeArmor: Deployment Guide"},{"location":"getting-started/kubearmor-install/#deployment_steps_for_kubearmor_karmor_cli","text":"","title":"Deployment Steps for KubeArmor &amp; karmor CLI"},{"location":"getting-started/kubearmor-install/#1_download_and_install_karmor_cli","text":"curl -sfL https://raw.githubusercontent.com/kubearmor/kubearmor-client/main/install.sh | sudo sh -s -- -b /usr/local/bin","title":"1. Download and install karmor CLI"},{"location":"getting-started/kubearmor-install/#2_install_kubearmor","text":"karmor install It is assumed that the k8s cluster is already present/reachable and the user has rights to create service-accounts and cluster-role-bindings.","title":"2. Install KubeArmor"},{"location":"getting-started/kubearmor-install/#3_deploying_sample_app_and_policies","text":"","title":"3. Deploying sample app and policies"},{"location":"getting-started/kubearmor-install/#a_deploy_sample_multiubuntu_app","text":"kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/multiubuntu-deployment.yaml","title":"a. Deploy sample multiubuntu app"},{"location":"getting-started/kubearmor-install/#b_deploy_sample_policies","text":"kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/examples/multiubuntu/security-policies/ksp-group-1-proc-path-block.yaml This sample policy blocks execution of sleep command in ubuntu-1 pods.","title":"b. Deploy sample policies"},{"location":"getting-started/kubearmor-install/#c_simulate_policy_violation","text":"$ kubectl -n multiubuntu exec -it POD_NAME_FOR_UBUNTU_1 -- bash # sleep 1 ( Permission Denied ) Substitute POD_NAME_FOR_UBUNTU_1 with the actual pod name from kubectl get pods -n multiubuntu .","title":"c. Simulate policy violation"},{"location":"getting-started/kubearmor-install/#4_getting_alertstelemetry_from_kubearmor","text":"","title":"4. Getting Alerts/Telemetry from KubeArmor"},{"location":"getting-started/kubearmor-install/#a_enable_port-forwarding_for_kubearmor_relay","text":"kubectl port-forward -n kube-system svc/kubearmor 32767 :32767","title":"a. Enable port-forwarding for KubeArmor relay"},{"location":"getting-started/kubearmor-install/#b_observing_logs_using_karmor_cli","text":"karmor log","title":"b. Observing logs using karmor cli"},{"location":"getting-started/kubearmor-install/#k8s_platforms_tested","text":"Google Kubernetes Engine (GKE) Container Optimized OS (COS) GKE Ubuntu image Amazon Elastic Kubernetes Service (EKS) Self-managed (on-prem) k8s Local k8s engines (microk8s, k3s, minikube)","title":"K8s platforms tested"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"pip"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"}]}